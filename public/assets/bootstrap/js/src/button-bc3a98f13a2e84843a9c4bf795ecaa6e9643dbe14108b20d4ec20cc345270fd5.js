import $ from"jquery";const Button=(t=>{const e="button",s="4.1.3",n="bs.button",a=`.${n}`,i=".data-api",o=t.fn[e],c={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},l={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:"input",ACTIVE:".active",BUTTON:".btn"},r={CLICK_DATA_API:`click${a}${i}`,FOCUS_BLUR_DATA_API:`focus${a}${i} `+`blur${a}${i}`};class T{constructor(t){this._element=t}static get VERSION(){return s}toggle(){let e=!0,s=!0;const n=t(this._element).closest(l.DATA_TOGGLE)[0];if(n){const a=this._element.querySelector(l.INPUT);if(a){if("radio"===a.type)if(a.checked&&this._element.classList.contains(c.ACTIVE))e=!1;else{const e=n.querySelector(l.ACTIVE);e&&t(e).removeClass(c.ACTIVE)}if(e){if(a.hasAttribute("disabled")||n.hasAttribute("disabled")||a.classList.contains("disabled")||n.classList.contains("disabled"))return;a.checked=!this._element.classList.contains(c.ACTIVE),t(a).trigger("change")}a.focus(),s=!1}}s&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(c.ACTIVE)),e&&t(this._element).toggleClass(c.ACTIVE)}dispose(){t.removeData(this._element,n),this._element=null}static _jQueryInterface(e){return this.each(function(){let s=t(this).data(n);s||(s=new T(this),t(this).data(n,s)),"toggle"===e&&s[e]()})}}return t(document).on(r.CLICK_DATA_API,l.DATA_TOGGLE_CARROT,e=>{e.preventDefault();let s=e.target;t(s).hasClass(c.BUTTON)||(s=t(s).closest(l.BUTTON)),T._jQueryInterface.call(t(s),"toggle")}).on(r.FOCUS_BLUR_DATA_API,l.DATA_TOGGLE_CARROT,e=>{const s=t(e.target).closest(l.BUTTON)[0];t(s).toggleClass(c.FOCUS,/^focus(in)?$/.test(e.type))}),t.fn[e]=T._jQueryInterface,t.fn[e].Constructor=T,t.fn[e].noConflict=function(){return t.fn[e]=o,T._jQueryInterface},T})($);export default Button;